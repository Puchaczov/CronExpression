//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cron.Visitors.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cron.Visitors.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value cannot be used in this context. Value &apos;{0}&apos; {1}.
        /// </summary>
        internal static string CannotBeUsedInThisContext {
            get {
                return ResourceManager.GetString("CannotBeUsedInThisContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cannot be mixed with any other values..
        /// </summary>
        internal static string DoNotMixValues {
            get {
                return ResourceManager.GetString("DoNotMixValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression contains missing value. Missing nodes are placed in segment {0}..
        /// </summary>
        internal static string MissingValue {
            get {
                return ResourceManager.GetString("MissingValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Month is out range. Month can contains value from 1-12 and JAN-DEC..
        /// </summary>
        internal static string MonthIsOutOfRange {
            get {
                return ResourceManager.GetString("MonthIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item can contains only {0} descendants. Has {1}..
        /// </summary>
        internal static string NodeCountMismatched {
            get {
                return ResourceManager.GetString("NodeCountMismatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} cannot be used in this segment {1}. Value must be ranged from {2} - {3}..
        /// </summary>
        internal static string OutOfRange {
            get {
                return ResourceManager.GetString("OutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} cannot be used in this segment {1}. Min value is {2}..
        /// </summary>
        internal static string OutOfRangeMin {
            get {
                return ResourceManager.GetString("OutOfRangeMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is too much descendants for range(hyphen) item..
        /// </summary>
        internal static string RangeDescendantsCount {
            get {
                return ResourceManager.GetString("RangeDescendantsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range values are swapped. Left {0} should be right, {1} should be left..
        /// </summary>
        internal static string RangeValueSwapped {
            get {
                return ResourceManager.GetString("RangeValueSwapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported field value {0} of type {1}. This field can contains only values of types {2}..
        /// </summary>
        internal static string UnsupportedFieldValue {
            get {
                return ResourceManager.GetString("UnsupportedFieldValue", resourceCulture);
            }
        }
    }
}
